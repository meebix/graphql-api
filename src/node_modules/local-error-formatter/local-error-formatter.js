const defaultFormatter = require('./default-formatter');
const knexFormatter = require('./knex-formatter');
const sparkPostFormatter = require('./sparkpost-formatter');
const jwtFormatter = require('./jwt-formatter');
const stripeFormatter = require('./stripe-formatter');

/**
 * Determines the specific library error signature to be formatted
 *
 * @function
 * @param {Object} error - Express.js err
 * @returns {Object} - Formatted error object to be passed to formatError
 */
function formatError(err) {
  let name = err.name;

  // When err.name is generic like "Error", need to be more selective
  if (err.name === 'Error' && (err.sqlState || err.sqlMessage)) name = 'KnexError';
  if (err.name === 'Error' && (err.type && err.type.startsWith('Stripe'))) name = 'StripeError';

  switch (name) {
    case 'KnexError':
      return knexFormatter(err);
    case 'SparkPostError':
      return sparkPostFormatter(err);
    case 'TokenExpiredError':
    case 'JsonWebTokenError':
      return jwtFormatter(err);
    case 'StripeError':
      return stripeFormatter(err);
    case 'ValidationError':
    default:
      return defaultFormatter(err);
  }
}

module.exports = formatError;
