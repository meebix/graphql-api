const SparkPost = require('sparkpost');
const logger = require('local-logger');
const config = require('config');

const emailClient = new SparkPost(process.env.SPARKPOST_KEY);

/**
 * Send transmission email
 *
 * @description Set Sparkpost options; Send email via Sparkpost Email SDK
 * @function
 * @param {Object} user - Information about the user
 * @param {Object} options - SparkPost transmission options
 * @param {String} options.campaignId - SparkPost campaign_id
 * @param {String} options.templateId - SparkPost template_id
 * @param {Object} options.substitutionData - SparkPost email template data
 * @returns {Promise} - Send mail
 */
function send(user, options, callback) {
  return emailClient.transmissions.send({
    campaign_id: options.campaignId,
    metadata: {
      short_id: user.short_id,
    },
    options: {
      skip_suppression: false,
    },
    content: {
      template_id: options.templateId,
    },
    recipients: [
      {
        address: {
          name: user.first_name,
          email: user.email,
        },
        substitution_data: options.substitutionData,
      },
    ],
  })
    .then((data) => {
      if (callback) return callback(null, data);

      return logger.info({
        userId: user.short_id,
        data,
      }, `LOCAL-MAILER: ${options.campaignId} email successfully sent`);
    })
    .catch((err) => {
      if (callback) return callback(err, null);

      return logger.error({
        err,
      }, `LOCAL-MAILER: ${options.campaignId} email has not been sent`);
    });
}

module.exports = {
  send: config.sendEmails ? send : function noop() {},
};
