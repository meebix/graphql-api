const SparkPost = require('sparkpost');
const logger = require('local-logger');
const config = require('config');

const emailClient = new SparkPost(process.env.SPARKPOST_KEY);

/**
 * Send transmission email
 *
 * @function
 * @param {Object} user - Information about the user
 * @param {Object} options - SparkPost transmission options
 * @param {String} options.campaignId - SparkPost campaign_id
 * @param {String} options.templateId - SparkPost template_id
 * @param {Object} options.substitutionData - SparkPost email template data
 * @returns {Promise}
 */
function send(user, options) {
  if (!config.sendEmails) return { user };

  return new Promise((resolve, reject) => {
    emailClient.transmissions.send({
      campaign_id: options.campaignId,
      metadata: {
        short_id: user.short_id,
      },
      options: {
        skip_suppression: false,
      },
      content: {
        template_id: options.templateId,
      },
      recipients: [
        {
          address: {
            name: user.first_name,
            email: user.email,
          },
          substitution_data: options.substitutionData,
        },
      ],
    }, (err, data) => {
      if (err) {
        logger.info({ campaignId: options.campaignId, data }, 'LOCAL-MAILER: Email could not be sent');
        return reject(err);
      }

      logger.info({ campaignId: options.campaignId, data }, 'LOCAL-MAILER: Email successfully sent');
      return resolve({ data, user });
    });
  });
}

module.exports = {
  send,
};
